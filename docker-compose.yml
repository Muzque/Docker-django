version: '3.3'
services:
    db:
        container_name: mysql-container
        image: mysql:5.7
        restart: always
        environment:
            - MYSQL_HOST=${MYSQL_HOST}
            - MYSQL_DATABASE=${MYSQL_DATABASE}
            - MYSQL_USER=${MYSQL_USER}
            - MYSQL_PASSWORD=${MYSQL_PASSWORD}
            - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
        volumes:
            - mysqldb:/var/lib/mysql
        command: ["mysqld", "--character-set-server=utf8"]
        ports:
            - "3306:3306"
        expose:
            - "3306"
        networks:
            - backend
    redis:
        container_name: redis-container
        image: redis:latest
        command: redis-server
        ports:
            - "6379:6379"
        volumes:
            - redisdata:/data
        networks:
            - backend

    nginx:
        container_name: nginx-container
        build: ./nginx
        restart: always
        ports:
            - "80:80"
        volumes:
            - api_data:/docker_api
            - ./log:/var/log/nginx
        depends_on:
            - app
        networks:
            - backend
    app:
        container_name: api-container
        build: ./django
        command: sh build.sh
        restart: always
        volumes:
            - api_data:/docker_api
        ports:
            - "8000:8000"
        depends_on:
            - db
            - redis
        networks:
            - backend
networks:
        backend:
                driver: "bridge"
volumes:
        api_data:
        mysqldb:
        redisdata:
